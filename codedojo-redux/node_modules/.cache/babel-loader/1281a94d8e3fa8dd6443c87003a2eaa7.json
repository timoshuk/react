{"ast":null,"code":"var _jsxFileName = \"C:\\\\work_project\\\\react\\\\codedojo-redux\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = {\n  count: 0\n}, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        count: state.count + action.amount\n      };\n\n    case \"DECREMENT\":\n      return {\n        count: state.count - action.amount\n      };\n\n    case \"RESET\":\n      return {\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction increment(amount) {\n  return {\n    type: \"INCREMENT\",\n    amount\n  };\n}\n\nfunction decrement(amount) {\n  return {\n    type: \"DECREMENT\",\n    amount\n  };\n}\n\nfunction reset() {\n  return {\n    type: \"RESET\"\n  };\n}\n\nconst store = createStore(reducer, initialState);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.countIncrement = () => {\n      let amount = parseInt(this.refs.amount.value || 1);\n      store.dispatch(increment(amount));\n    };\n\n    this.countDecrement = () => {\n      let amount = parseInt(this.refs.amount.value || 1);\n      store.dispatch(decrement(amount));\n    };\n\n    this.countReset = () => {\n      store.dispatch(reset());\n    };\n  }\n\n  componentDidMount() {\n    store.subscribe(() => this.forceUpdate());\n  }\n\n  render() {\n    const count = store.getState().count;\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, count), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.countIncrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: this.countReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"R\"), React.createElement(\"button\", {\n      onClick: this.countDecrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"amount\",\n      defaultValue: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\work_project\\react\\codedojo-redux\\src\\index.js"],"names":["React","Component","ReactDOM","createStore","initialState","count","reducer","state","action","type","amount","increment","decrement","reset","store","App","countIncrement","parseInt","refs","value","dispatch","countDecrement","countReset","componentDidMount","subscribe","forceUpdate","render","getState","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASC,OAAT,CAAiBC,KAAK,GAAG;AAAEF,EAAAA,KAAK,EAAE;AAAT,CAAzB,EAAuCG,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;AAA9B,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEL,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;AAA9B,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AACLL,QAAAA,KAAK,EAAE;AADF,OAAP;;AAGF;AACE,aAAOE,KAAP;AAVJ;AAYD;;AAED,SAASI,SAAT,CAAmBD,MAAnB,EAA2B;AACzB,SAAO;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA;AAArB,GAAP;AACD;;AAED,SAASE,SAAT,CAAmBF,MAAnB,EAA2B;AACzB,SAAO;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA;AAArB,GAAP;AACD;;AAED,SAASG,KAAT,GAAiB;AACf,SAAO;AAAEJ,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;;AAED,MAAMK,KAAK,GAAGX,WAAW,CAACG,OAAD,EAAUF,YAAV,CAAzB;;AAEA,MAAMW,GAAN,SAAkBd,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAI1Be,cAJ0B,GAIT,MAAM;AACrB,UAAIN,MAAM,GAAGO,QAAQ,CAAC,KAAKC,IAAL,CAAUR,MAAV,CAAiBS,KAAjB,IAA0B,CAA3B,CAArB;AACAL,MAAAA,KAAK,CAACM,QAAN,CAAeT,SAAS,CAACD,MAAD,CAAxB;AACD,KAPyB;;AAAA,SAS1BW,cAT0B,GAST,MAAM;AACrB,UAAIX,MAAM,GAAGO,QAAQ,CAAC,KAAKC,IAAL,CAAUR,MAAV,CAAiBS,KAAjB,IAA0B,CAA3B,CAArB;AACAL,MAAAA,KAAK,CAACM,QAAN,CAAeR,SAAS,CAACF,MAAD,CAAxB;AACD,KAZyB;;AAAA,SAa1BY,UAb0B,GAab,MAAM;AACjBR,MAAAA,KAAK,CAACM,QAAN,CAAeP,KAAK,EAApB;AACD,KAfyB;AAAA;;AAC1BU,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM,KAAKC,WAAL,EAAtB;AACD;;AAcDC,EAAAA,MAAM,GAAG;AACP,UAAMrB,KAAK,GAAGS,KAAK,CAACa,QAAN,GAAiBtB,KAA/B;AACA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CADF,EAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKW,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKM,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKD,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CAHF,EASE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAC,QAAvB;AAAgC,MAAA,YAAY,EAAC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AAhCyB;;AAmC5BnB,QAAQ,CAACwB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\n\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = { count: 0 }, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { count: state.count + action.amount };\n    case \"DECREMENT\":\n      return { count: state.count - action.amount };\n    case \"RESET\":\n      return {\n        count: 0\n      };\n    default:\n      return state;\n  }\n}\n\nfunction increment(amount) {\n  return { type: \"INCREMENT\", amount };\n}\n\nfunction decrement(amount) {\n  return { type: \"DECREMENT\", amount };\n}\n\nfunction reset() {\n  return { type: \"RESET\" };\n}\n\nconst store = createStore(reducer, initialState);\n\nclass App extends Component {\n  componentDidMount() {\n    store.subscribe(() => this.forceUpdate());\n  }\n  countIncrement = () => {\n    let amount = parseInt(this.refs.amount.value || 1);\n    store.dispatch(increment(amount));\n  };\n\n  countDecrement = () => {\n    let amount = parseInt(this.refs.amount.value || 1);\n    store.dispatch(decrement(amount));\n  };\n  countReset = () => {\n    store.dispatch(reset());\n  };\n\n  render() {\n    const count = store.getState().count;\n    return (\n      <div className=\"counter\">\n        <h1>{count}</h1>\n\n        <div className=\"buttons\">\n          <button onClick={this.countIncrement}>+</button>\n          <button onClick={this.countReset}>R</button>\n          <button onClick={this.countDecrement}>-</button>\n        </div>\n\n        <input type=\"text\" ref=\"amount\" defaultValue=\"1\" />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}